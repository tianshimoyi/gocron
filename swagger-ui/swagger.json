{
  "swagger": "2.0",
  "info": {
    "description": "gocron server OpenAPI",
    "title": "gocron api server",
    "contact": {
      "name": "api server",
      "url": "http://localhost:8080",
      "email": "example@example.com"
    },
    "license": {
      "name": "Apache",
      "url": "http://www.apache.org/licenses/"
    },
    "version": "1.0.0",
    "x-taggroups": [
      {
        "name": "Task",
        "tags": [
          "Task"
        ]
      },
      {
        "name": "System",
        "tags": [
          "Node"
        ]
      }
    ]
  },
  "paths": {
    "/api/core/v1/tasks": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Task"
        ],
        "summary": "List task",
        "operationId": "ListTask",
        "parameters": [
          {
            "type": "string",
            "format": "limit=%d,page=%d",
            "default": "limit=10,page=1",
            "description": "paging query, e.g. limit=100,page=1",
            "name": "paging",
            "in": "query"
          },
          {
            "type": "bool",
            "default": false,
            "description": "revers result",
            "name": "reverse",
            "in": "query"
          },
          {
            "type": "int",
            "default": 0,
            "description": "task id",
            "name": "id",
            "in": "query"
          },
          {
            "type": "int",
            "default": 0,
            "description": "host id",
            "name": "hostid",
            "in": "query"
          },
          {
            "type": "string",
            "description": "task tag",
            "name": "tag",
            "in": "query"
          },
          {
            "type": "string",
            "description": "task name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "task protocol",
            "name": "protocol",
            "in": "query"
          },
          {
            "type": "string",
            "description": "task status",
            "name": "status",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "It is used to indicate nonspecific success. The response body contains a representation of the resource.",
            "schema": {
              "$ref": "#/definitions/restplus.PageableResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          }
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Task"
        ],
        "summary": "Create task",
        "operationId": "CreateTask",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schema.TaskRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upon success, the HTTP response shall include a Location HTTP header that contains the resource URI of the created resource."
          },
          "400": {
            "description": "Bad Request. It is used to indicate that incorrect parameters were passed to the request.",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          },
          "409": {
            "description": "Already exists",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          }
        }
      }
    },
    "/api/core/v1/tasks/{task}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Task"
        ],
        "summary": "get task",
        "operationId": "GetTask",
        "parameters": [
          {
            "type": "string",
            "description": "task id",
            "name": "task",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "It is used to indicate nonspecific success. The response body contains a representation of the resource.",
            "schema": {
              "$ref": "#/definitions/models.Task"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Task"
        ],
        "summary": "delete task",
        "operationId": "DeleteTask",
        "parameters": [
          {
            "type": "string",
            "description": "task id",
            "name": "task",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "It is used to indicate nonspecific success. The response body contains a representation of the resource."
          },
          "404": {
            "description": "Not Found. It is used when a client provided a URI that cannot be mapped to a valid resource URI."
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          }
        }
      },
      "head": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Task"
        ],
        "summary": "check task exist",
        "operationId": "CheckTaskExist",
        "parameters": [
          {
            "type": "string",
            "description": "task id or name",
            "name": "task",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "It is used to indicate nonspecific success. The response body contains a representation of the resource."
          },
          "404": {
            "description": "Not Found. It is used when a client provided a URI that cannot be mapped to a valid resource URI."
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          }
        }
      }
    },
    "/api/core/v1/tasks/{task}/disable": {
      "patch": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Task"
        ],
        "summary": "disable task",
        "operationId": "DisableTask",
        "parameters": [
          {
            "type": "string",
            "description": "task id",
            "name": "task",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "It is used to indicate nonspecific success. The response body contains a representation of the resource."
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          }
        }
      }
    },
    "/api/core/v1/tasks/{task}/enable": {
      "patch": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Task"
        ],
        "summary": "enable task",
        "operationId": "EnableTask",
        "parameters": [
          {
            "type": "string",
            "description": "task id",
            "name": "task",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "It is used to indicate nonspecific success. The response body contains a representation of the resource."
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          }
        }
      }
    },
    "/api/core/v1/tasks/{task}/logs": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Task"
        ],
        "summary": "get task log",
        "operationId": "GetTaskLog",
        "parameters": [
          {
            "type": "string",
            "description": "task id",
            "name": "task",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "It is used to indicate nonspecific success. The response body contains a representation of the resource.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.TaskLog"
              }
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Task"
        ],
        "summary": "clear task log",
        "operationId": "ClearTaskLog",
        "parameters": [
          {
            "type": "string",
            "description": "task id",
            "name": "task",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "It is used to indicate nonspecific success. The response body contains a representation of the resource.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.TaskLog"
              }
            }
          }
        }
      }
    },
    "/api/core/v1/tasks/{task}/run": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Task"
        ],
        "summary": "run task",
        "operationId": "RunTask",
        "parameters": [
          {
            "type": "string",
            "description": "task id",
            "name": "task",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "It is used to indicate nonspecific success. The response body contains a representation of the resource."
          }
        }
      }
    },
    "/api/core/v1/tasks/{task}/stop": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Task"
        ],
        "summary": "stop running task",
        "operationId": "StopTask",
        "parameters": [
          {
            "type": "string",
            "description": "task id",
            "name": "task",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "It is used to indicate nonspecific success. The response body contains a representation of the resource."
          }
        }
      }
    },
    "/api/system/v1/nodes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Node"
        ],
        "summary": "List host",
        "operationId": "ListNode",
        "parameters": [
          {
            "type": "string",
            "format": "limit=%d,page=%d",
            "default": "limit=10,page=1",
            "description": "paging query, e.g. limit=100,page=1",
            "name": "paging",
            "in": "query"
          },
          {
            "type": "bool",
            "default": false,
            "description": "revers result",
            "name": "reverse",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "It is used to indicate nonspecific success. The response body contains a representation of the resource.",
            "schema": {
              "$ref": "#/definitions/restplus.PageableResponse"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          }
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Node"
        ],
        "summary": "Add host",
        "operationId": "AddNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schema.NodeRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upon success, the HTTP response shall include a Location HTTP header that contains the resource URI of the created resource."
          },
          "400": {
            "description": "Bad Request. It is used to indicate that incorrect parameters were passed to the request.",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          },
          "409": {
            "description": "Already exists",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          }
        }
      }
    },
    "/api/system/v1/nodes/{node}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Node"
        ],
        "summary": "Get host",
        "operationId": "GetNode",
        "parameters": [
          {
            "type": "string",
            "description": "node id or node name",
            "name": "node",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "It is used to indicate nonspecific success. The response body contains a representation of the resource.",
            "schema": {
              "$ref": "#/definitions/models.Host"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          }
        }
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Node"
        ],
        "summary": "Update host",
        "operationId": "UpdateNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schema.NodeRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "It is used to indicate nonspecific success. The response body contains a representation of the resource."
          },
          "400": {
            "description": "Bad Request. It is used to indicate that incorrect parameters were passed to the request.",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          },
          "409": {
            "description": "Already exists",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Node"
        ],
        "summary": "Delete host",
        "operationId": "DeleteNode",
        "parameters": [
          {
            "type": "string",
            "description": "node id",
            "name": "node",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "It is used to indicate nonspecific success. The response body contains a representation of the resource."
          },
          "404": {
            "description": "Not Found. It is used when a client provided a URI that cannot be mapped to a valid resource URI."
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          }
        }
      },
      "head": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Node"
        ],
        "summary": "Check host exist",
        "operationId": "CheckNodeExist",
        "parameters": [
          {
            "type": "string",
            "description": "node id or node name",
            "name": "node",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "It is used to indicate nonspecific success. The response body contains a representation of the resource."
          },
          "404": {
            "description": "Not Found. It is used when a client provided a URI that cannot be mapped to a valid resource URI."
          },
          "500": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/restful.ServiceError"
            }
          }
        }
      }
    },
    "/api/system/v1/nodes/{node}/ping": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Node"
        ],
        "summary": "Check host exist",
        "operationId": "PingNode",
        "parameters": [
          {
            "type": "string",
            "description": "node id",
            "name": "node",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "It is used to indicate nonspecific success. The response body contains a representation of the resource."
          },
          "404": {
            "description": "Not Found. It is used when a client provided a URI that cannot be mapped to a valid resource URI."
          }
        }
      }
    }
  },
  "definitions": {
    "models.Host": {
      "properties": {
        "alias": {
          "type": "string"
        },
        "create_time": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "integer"
        },
        "name": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "remark": {
          "type": "string"
        },
        "update_time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "models.Task": {
      "properties": {
        "command": {
          "type": "string"
        },
        "create_time": {
          "type": "string",
          "format": "date-time"
        },
        "dependency_status": {
          "type": "string"
        },
        "dependency_task_id": {
          "type": "string"
        },
        "hosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.TaskHostDetail"
          }
        },
        "http_method": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "integer"
        },
        "level": {
          "type": "string"
        },
        "multi": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "next_run_time": {
          "type": "string",
          "format": "date-time"
        },
        "notify_keyword": {
          "type": "string"
        },
        "notify_receiver_id": {
          "type": "string"
        },
        "notify_status": {
          "type": "integer",
          "format": "byte"
        },
        "notify_type": {
          "type": "integer",
          "format": "byte"
        },
        "protocol": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        },
        "retry_interval": {
          "type": "integer",
          "format": "integer"
        },
        "retry_times": {
          "type": "integer",
          "format": "byte"
        },
        "spec": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "update_time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "models.TaskHostDetail": {
      "properties": {
        "alias": {
          "type": "string"
        },
        "create_time": {
          "type": "string",
          "format": "date-time"
        },
        "host_id": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "integer"
        },
        "name": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "task_id": {
          "type": "integer",
          "format": "int32"
        },
        "update_time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "models.TaskLog": {
      "required": [
        "task_id",
        "name",
        "spec",
        "protocol",
        "command",
        "timeout",
        "retry_times",
        "hostname",
        "start_time",
        "end_time",
        "status",
        "result",
        "total_time"
      ],
      "properties": {
        "command": {
          "type": "string"
        },
        "end_time": {
          "type": "string",
          "format": "date-time"
        },
        "hostname": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "integer"
        },
        "name": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "result": {
          "type": "string"
        },
        "retry_times": {
          "type": "integer",
          "format": "byte"
        },
        "spec": {
          "type": "string"
        },
        "start_time": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string"
        },
        "task_id": {
          "type": "integer",
          "format": "int32"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "total_time": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "restful.ServiceError": {
      "required": [
        "Code",
        "Message"
      ],
      "properties": {
        "Code": {
          "type": "integer",
          "format": "int32"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "restplus.PageableResponse": {
      "required": [
        "items",
        "total_count"
      ],
      "properties": {
        "items": {
          "description": "paging data",
          "$ref": "#/definitions/restplus.PageableResponse.items"
        },
        "total_count": {
          "description": "total count",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "restplus.PageableResponse.items": {},
    "schema.NodeRequest": {
      "required": [
        "name",
        "port"
      ],
      "properties": {
        "alias": {
          "description": "alias name",
          "type": "string"
        },
        "name": {
          "description": "node name",
          "type": "string"
        },
        "port": {
          "description": "node port",
          "type": "integer",
          "format": "int32"
        },
        "remark": {
          "description": "node remark",
          "type": "string"
        }
      }
    },
    "schema.TaskRequest": {
      "required": [
        "level",
        "dependency_status",
        "name",
        "spec",
        "protocol",
        "command",
        "type"
      ],
      "properties": {
        "command": {
          "description": "shell command or http url",
          "type": "string"
        },
        "dependency_status": {
          "description": "task dependency status",
          "type": "string",
          "enum": [
            "strong",
            "weak"
          ]
        },
        "dependency_task_id": {
          "description": "dependency task id",
          "type": "string"
        },
        "hosts": {
          "description": "host ids",
          "type": "string"
        },
        "http_method": {
          "description": "get or post",
          "type": "string",
          "enum": [
            "get",
            "post"
          ]
        },
        "level": {
          "description": "task level",
          "type": "string",
          "enum": [
            "parent",
            "child"
          ]
        },
        "multi": {
          "description": "allow multi task run the same time, default is false",
          "type": "boolean"
        },
        "name": {
          "description": "task name",
          "type": "string"
        },
        "notify_keyword": {
          "description": "notify keyword",
          "type": "string"
        },
        "notify_receiver_id": {
          "description": "notify receivers",
          "type": "string"
        },
        "notify_status": {
          "description": "notify status",
          "type": "integer",
          "format": "byte"
        },
        "notify_type": {
          "description": "notify type",
          "type": "integer",
          "format": "byte"
        },
        "protocol": {
          "description": "task protocol type,shell or http",
          "type": "string",
          "enum": [
            "http",
            "shell"
          ]
        },
        "remark": {
          "description": "task remark",
          "type": "string"
        },
        "retry_interval": {
          "description": "retry interval, second",
          "type": "integer",
          "format": "integer"
        },
        "retry_times": {
          "description": "task retry times when task run failed",
          "type": "integer",
          "format": "byte"
        },
        "spec": {
          "description": "crontab expression",
          "type": "string"
        },
        "tag": {
          "description": "task tag",
          "type": "string"
        },
        "timeout": {
          "description": "task timeout, second, 0 is not limit",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "task type, job or cronjob",
          "type": "string",
          "enum": [
            "job",
            "cronjob"
          ]
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}